name: Test
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: ./.github/actions/setup-environment

      - name: Compile project
        run: ./gradlew compileTestJava --continue --info

      - uses: actions/upload-artifact@v4
        with:
          name: compiled-classes
          path: |
            build/classes/
            build/generated/
            build/resources/

  test:
    needs: build
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - name: "anthropic"
            tests: "dev.coding_challenge_souffleur.model.AnthropicServiceTest"
          - name: "javafx"
            tests: "dev.coding_challenge_souffleur.JavaFxApplicationSmokeTest"
          - name: "other"
            exclude: "dev/coding_challenge_souffleur/model/AnthropicServiceTest.class,dev/coding_challenge_souffleur/JavaFxApplicationSmokeTest.class"

    steps:
      - uses: ./.github/actions/setup-environment

      - uses: actions/download-artifact@v4
        with:
          name: compiled-classes
          path: .

      - name: Run specific tests
        if: matrix.exclude == ''
        run: ./gradlew test --tests "${{ matrix.tests }}" jacocoTestReport --continue --info
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

      - name: Run other tests (with exclusions)
        if: matrix.exclude != ''
        run: ./gradlew test jacocoTestReport --continue --info -PexcludeTests="${{ matrix.exclude }}"
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: results-${{ matrix.name }}
          path: |
            build/test-results/test/*.xml
            build/jacoco/test.exec

  sonar:
    needs: [build, test]
    runs-on: windows-latest
    if: always()
    steps:
      - uses: ./.github/actions/setup-environment
        with:
          fetch-depth: 0

      - uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - uses: actions/download-artifact@v4
        with:
          name: compiled-classes
          path: .

      - uses: actions/download-artifact@v4
        with:
          pattern: results-*
          path: artifacts
          merge-multiple: true

      - name: Merge results
        run: |
          mkdir -p build/test-results/test build/jacoco
          find artifacts -name "*.xml" -exec cp {} build/test-results/test/ \;
          find artifacts -name "test.exec" -exec cp {} build/jacoco/ \;
        shell: bash

      - name: Run Sonar
        run: ./gradlew sonar --continue --info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - uses: dorny/test-reporter@v2
        if: always()
        with:
          name: 'Test Results'
          path: 'build/test-results/test/*.xml'
          reporter: 'java-junit'
          fail-on-error: false
